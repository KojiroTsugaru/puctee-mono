"""editted property for plan and location

Revision ID: 8b8d9ef60629
Revises: 49cf34bd191c
Create Date: 2025-05-15 17:39:10.056752

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8b8d9ef60629'
down_revision: Union[str, None] = '49cf34bd191c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plans_id'), 'plans', ['id'], unique=False)
    op.create_index(op.f('ix_plans_title'), 'plans', ['title'], unique=False)
    op.create_table('plan_participants',
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('plan_id', 'user_id')
    )
    op.drop_index('ix_chat_messages_id', table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_table('meetup_participants')
    op.drop_index('ix_timeline_posts_id', table_name='timeline_posts')
    op.drop_table('timeline_posts')
    op.drop_index('ix_meetups_id', table_name='meetups')
    op.drop_index('ix_meetups_title', table_name='meetups')
    op.execute('DROP TABLE meetups CASCADE')
    op.add_column('locations', sa.Column('plan_id', sa.Integer(), nullable=True))
    op.add_column('locations', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.drop_column('locations', 'meetup_id')
    op.create_foreign_key(None, 'locations', 'plans', ['plan_id'], ['id'])
    op.add_column('penalties', sa.Column('plan_id', sa.Integer(), nullable=True))
    op.add_column('penalties', sa.Column('content', sa.String(), nullable=False))
    op.drop_column('penalties', 'user_id')
    op.drop_column('penalties', 'updated_at')
    op.drop_column('penalties', 'meetup_id')
    op.drop_column('penalties', 'amount')
    op.drop_column('penalties', 'created_at')
    op.drop_column('penalties', 'proof_url')
    op.drop_column('penalties', 'reason')
    op.create_foreign_key(None, 'penalties', 'plans', ['plan_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('penalties', sa.Column('reason', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('penalties', sa.Column('proof_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('penalties', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('penalties', sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('penalties', sa.Column('meetup_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('penalties', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('penalties', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'penalties', type_='foreignkey')
    op.create_foreign_key('penalties_meetup_id_fkey', 'penalties', 'meetups', ['meetup_id'], ['id'])
    op.create_foreign_key('penalties_user_id_fkey', 'penalties', 'users', ['user_id'], ['id'])
    op.drop_column('penalties', 'content')
    op.drop_column('penalties', 'plan_id')
    op.add_column('locations', sa.Column('meetup_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'locations', type_='foreignkey')
    op.create_foreign_key('locations_meetup_id_fkey', 'locations', 'meetups', ['meetup_id'], ['id'])
    op.drop_column('locations', 'updated_at')
    op.drop_column('locations', 'plan_id')
    op.create_table('meetups',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('meetups_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('end_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='meetups_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_meetups_title', 'meetups', ['title'], unique=False)
    op.create_index('ix_meetups_id', 'meetups', ['id'], unique=False)
    op.create_table('timeline_posts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('meetup_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['meetup_id'], ['meetups.id'], name='timeline_posts_meetup_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='timeline_posts_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='timeline_posts_pkey')
    )
    op.create_index('ix_timeline_posts_id', 'timeline_posts', ['id'], unique=False)
    op.create_table('meetup_participants',
    sa.Column('meetup_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['meetup_id'], ['meetups.id'], name='meetup_participants_meetup_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='meetup_participants_user_id_fkey'),
    sa.PrimaryKeyConstraint('meetup_id', 'user_id', name='meetup_participants_pkey')
    )
    op.create_table('chat_messages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('meetup_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['meetup_id'], ['meetups.id'], name='chat_messages_meetup_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='chat_messages_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='chat_messages_pkey')
    )
    op.create_index('ix_chat_messages_id', 'chat_messages', ['id'], unique=False)
    op.drop_table('plan_participants')
    op.drop_index(op.f('ix_plans_title'), table_name='plans')
    op.drop_index(op.f('ix_plans_id'), table_name='plans')
    op.drop_table('plans')
    # ### end Alembic commands ###
